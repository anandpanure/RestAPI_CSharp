Installation 

//Mongo DB Setup
Insatll MongoDB for VS Code extension
dotnet add package MongoDB.Driver
docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db mongo
docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db -e MONGO_INITDB_ROOT_USERNAME=mongoadmin -e MONGO_INITDB_ROOT_PASSWORD=Pass#word1 mongo
docker ps


.Net Secrets Manager
dotnet user-secrets init
dotnet user-secrets set MongoDbSettings:Password Pass#word1

Health checks Nuget
dotnet add package AspNetCore.HealthChecks.MongoDb

Docker

docker build -t catalog:v1 .
docker network create net6catalog
docker network ls
docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db -e MONGO_INITDB_ROOT_USERNAME=mongoadmin -e MONGO_INITDB_ROOT_PASSWORD=Pass#word1 --network=net6catalog mongo
docker run -it --rm -p 8090:80 -e MongoDbSettings:Host=mongo -e MongoDbSettings:Password=Pass#word1 --network=net6catalog catalog:v1


pushing it to docker hub
docker login
docker tag catalog:v1 ananddevvv/catalog:v1
docker push ananddevvv/catalog:v1

docker rmi catalog:v1 //remove images from local

docker logout

docker run -it --rm -p 8090:80 -e MongoDbSettings:Host=mongo -e MongoDbSettings:Password=Pass#word1 --network=net6catalog ananddevvv/catalog:v1



Container Orchestration - Kubernetes

Control plane- brain of kubernetes

kubectl config current-context
Install kubernetes exension in vscode


Kubernetes Setup
kubectl config current-context
kubectl create secret generic catalog-secrets --from-literal= mongodb-password='Pass#word1'
cd .\kubernetes\
kubectl apply -f .\catalog.yaml
kubectl get deployments
kubectl get pods
kubectl logs catalog-deployment-6754476cd4-rlbb6 

Create Configurat file mongodb.yaml
use deployment StatefulSet Snippet of vscode
kubectl apply -f .\mongodb.yaml
kubectl get statefulsets



